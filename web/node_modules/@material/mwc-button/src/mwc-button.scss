/**
@license
Copyright 2018 Google Inc. All Rights Reserved.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

@use '@material/mwc-base/src/elevation';
@use '@material/button';
@use '@material/feature-targeting' as feature;
@use '@material/theme';

@include button.without-ripple();

.trailing-icon,
.leading-icon, {
  ::slotted(*),
  .mdc-button__icon {
    @include button.icon_();
  }
}

.trailing-icon, {
  ::slotted(*),
  .mdc-button__icon {
    @include button.icon-trailing_();
  }
}

@mixin mdc-button-outline-width-var-aware(
  $outline-width,
  $padding: button.$contained-horizontal-padding,
  $query: feature.all()
) {
  $feat-structure: feature.create-target($query, structure);
  // Note: Adjust padding to maintain consistent width with non-outlined buttons
  $padding-value: calc(#{$padding} - #{$outline-width});

  @include button.horizontal-padding($padding-value, $query);

  @include feature.targets($feat-structure) {
    border-width: $outline-width;
  }
}

.mdc-button--raised {

  box-shadow: var(--mdc-button-raised-box-shadow, #{elevation.elevation-box-shadow(2)});

  &:hover,
  &:focus {
    box-shadow: var(--mdc-button-raised-box-shadow-hover, #{elevation.elevation-box-shadow(4)});
  }

  &:active {
    box-shadow: var(--mdc-button-raised-box-shadow-active, #{elevation.elevation-box-shadow(8)});
  }

  &:disabled {
    box-shadow: var(--mdc-button-raised-box-shadow-disabled, #{elevation.elevation-box-shadow(0)});
  }
}

:host {
  display: inline-flex;
  outline: none;
  /**
   * Override vertical-align with shortest value "top". Vertical-align's default
   * "baseline" value causes buttons to be misaligned next to each other if one
   * button has an icon and the other does not.
   */
  vertical-align: top;
}

:host([disabled]) {
  pointer-events: none;
}

:host([fullwidth]) {
  width: 100%;
}

.mdc-button {
  flex: auto;
  overflow: hidden;

  @include button.horizontal-padding(var(--mdc-button-horizontal-padding, #{button.$horizontal-padding}));

  &.mdc-button--raised,
  &.mdc-button--unelevated {
    @include button.horizontal-padding(var(--mdc-button-horizontal-padding, #{button.$contained-horizontal-padding}));
    // NOTE(dfreedm): Replace hardcoded opacities when
    // https://github.com/material-components/material-components-web-components/issues/1072
    // is resolved
    mwc-ripple {
      --mdc-ripple-color: var(--mdc-theme-on-primary, #{theme.prop-value(on-primary)});
      --mdc-ripple-hover-opacity: .08;
      --mdc-ripple-press-opacity: .24;
      --mdc-ripple-focus-opacity: .24;
    }
  }

  &.mdc-button--outlined {
    @include mdc-button-outline-width-var-aware(var(--mdc-button-outline-width, #{button.$outlined-border-width}), var(--mdc-button-horizontal-padding, #{button.$contained-horizontal-padding}));
    border-color: var(--mdc-button-outline-color, var(--mdc-theme-primary, #{theme.prop-value(primary)}));
    mwc-ripple {
      top: -1px;
      left: -1px;
      border: 1px solid transparent;
    }
  }

  &.mdc-button--dense {
    @include button.density(-2);
  }
}

:host([disabled]) {
  .mdc-button {

    &.mdc-button--raised,
    &.mdc-button--unelevated {
      background-color: var(--mdc-button-disabled-fill-color, #{rgba(theme.prop-value(on-surface), .12)});
      color: var(--mdc-button-disabled-ink-color, #{button.$disabled-ink-color});
    }

    &:not(.mdc-button--raised):not(.mdc-button--unelevated) {
      color: var(--mdc-button-disabled-ink-color, #{button.$disabled-ink-color});
    }

    &.mdc-button--outlined {
      border-color: var(--mdc-button-disabled-ink-color, #{button.$disabled-ink-color});
      border-color: var(--mdc-button-disabled-outline-color, var(--mdc-button-disabled-ink-color, #{button.$disabled-ink-color}));
    }
  }
}
